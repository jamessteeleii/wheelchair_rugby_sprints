time == 0 ~ "pre",
time == 1 ~ "post"
),
time = factor(time, levels = c("pre", "post"))) %>%
ggplot(aes(x=time, color=disability)) +
geom_line(aes(y=lactate, group=rowid), size=0.75, alpha=0.5) +
geom_point(aes(y=lactate), size=1, alpha=0.25) +
stat_slabinterval(data = subset(posterior_epred_draws, time == "pre"),
aes(x = time-0.05, y = .epred, color=disability, fill=disability),
.width = .95, alpha = 0.5, position = position_dodge(width = -0.05),
size=1.5, scale = 1, side = "left") +
labs(x="Timepoint",
y=bquote("Blood Lactate (mmol\U00B7"~L^-1~")"),
title = "Global grand mean and 95% credible interval (CI)",
subtitle = "Global grand mean and 95% credible interval (CI)\nIndividual data also shown") +
guides(fill = "none",
color = "none") +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Dark2") +
theme_classic()
data %>%
mutate(time = case_when(
time == 0 ~ "pre",
time == 1 ~ "post"
),
time = factor(time, levels = c("pre", "post"))) %>%
ggplot(aes(x=time, color=disability)) +
geom_line(aes(y=lactate, group=rowid), size=0.75, alpha=0.5) +
geom_point(aes(y=lactate), size=1, alpha=0.25) +
stat_slabinterval(data = subset(posterior_epred_draws, time == "pre"),
aes(y = .epred, color=disability, fill=disability),
.width = .95, alpha = 0.5, position = position_dodge(width = -0.05),
size=1.5, scale = 1, side = "left") +
labs(x="Timepoint",
y=bquote("Blood Lactate (mmol\U00B7"~L^-1~")"),
title = "Global grand mean and 95% credible interval (CI)",
subtitle = "Global grand mean and 95% credible interval (CI)\nIndividual data also shown") +
guides(fill = "none",
color = "none") +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Dark2") +
theme_classic()
data %>%
mutate(time = case_when(
time == 0 ~ "pre",
time == 1 ~ "post"
),
time = factor(time, levels = c("pre", "post"))) %>%
ggplot(aes(x=time, color=disability)) +
geom_line(aes(y=lactate, group=rowid), size=0.75, alpha=0.5) +
stat_slabinterval(data = subset(posterior_epred_draws, time == "pre"),
aes(y = .epred, color=disability, fill=disability),
.width = .95, alpha = 0.5, position = position_dodge(width = -0.05),
scale = 1, side = "left") +
labs(x="Timepoint",
y=bquote("Blood Lactate (mmol\U00B7"~L^-1~")"),
title = "Global grand mean and 95% credible interval (CI)",
subtitle = "Global grand mean and 95% credible interval (CI)\nIndividual data also shown") +
guides(fill = "none",
color = "none") +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Dark2") +
theme_classic()
data %>%
mutate(time = case_when(
time == 0 ~ "pre",
time == 1 ~ "post"
),
time = factor(time, levels = c("pre", "post"))) %>%
ggplot(aes(x=time, color=disability)) +
geom_line(aes(y=lactate, group=rowid), size=0.75, alpha=0.5) +
stat_slabinterval(data = subset(posterior_epred_draws, time == "pre"),
aes(y = .epred, color=disability, fill=disability),
.width = .95, alpha = 0.5, position = position_dodge(width = -0.05),
scale = 1, side = "left") +
stat_slabinterval(data = subset(posterior_epred_draws, time == "post"),
aes(y = .epred, color=disability, fill=disability),
.width = .95, alpha = 0.5, position = position_dodge(width = -0.05),
scale = 1, side = "right") +
labs(x="Timepoint",
y=bquote("Blood Lactate (mmol\U00B7"~L^-1~")"),
title = "Global grand mean and 95% credible interval (CI)",
subtitle = "Global grand mean and 95% credible interval (CI)\nIndividual data also shown") +
guides(fill = "none",
color = "none") +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Dark2") +
theme_classic()
data %>%
mutate(time = case_when(
time == 0 ~ "pre",
time == 1 ~ "post"
),
time = factor(time, levels = c("pre", "post"))) %>%
ggplot(aes(x=time, color=disability)) +
geom_line(aes(y=lactate, group=rowid), size=0.75, alpha=0.5) +
stat_slabinterval(data = subset(posterior_epred_draws, time == "pre"),
aes(y = .epred, color=disability, fill=disability),
.width = .95, alpha = 0.5, position = position_dodge(width = -0.05),
scale = 1, side = "left") +
stat_slabinterval(data = subset(posterior_epred_draws, time == "post"),
aes(y = .epred, color=disability, fill=disability),
.width = .95, alpha = 0.5, position = position_dodge(width = -0.05),
scale = 1, side = "right") +
labs(x="Timepoint",
y=bquote("Blood Lactate (mmol\U00B7"~L^-1~")"),
title = "Global grand mean and 95% credible interval (CI)",
subtitle = "Global grand mean and 95% credible interval (CI)\nIndividual data also shown") +
guides(
color = "none") +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Dark2") +
theme_classic()
data %>%
mutate(time = case_when(
time == 0 ~ "pre",
time == 1 ~ "post"
),
time = factor(time, levels = c("pre", "post"))) %>%
ggplot(aes(x=time, color=disability)) +
geom_line(aes(y=lactate, group=rowid), size=0.75, alpha=0.5) +
stat_slabinterval(data = subset(posterior_epred_draws, time == "pre"),
aes(y = .epred, color=disability, fill=disability),
.width = .95, alpha = 0.5, position = position_dodge(width = -0.05),
scale = 1, side = "left") +
stat_slabinterval(data = subset(posterior_epred_draws, time == "post"),
aes(y = .epred, color=disability, fill=disability),
.width = .95, alpha = 0.5, position = position_dodge(width = -0.05),
scale = 1, side = "right") +
labs(x="Timepoint",
y=bquote("Blood Lactate (mmol\U00B7"~L^-1~")"),
title = "Global grand mean and 95% credible interval (CI)",
subtitle = "Global grand mean and 95% credible interval (CI)\nIndividual data also shown") +
guides(line = "none",
color = "none") +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Dark2") +
theme_classic()
data %>%
mutate(time = case_when(
time == 0 ~ "pre",
time == 1 ~ "post"
),
time = factor(time, levels = c("pre", "post"))) %>%
ggplot(aes(x=time, color=disability)) +
geom_line(aes(y=lactate, group=rowid), size=0.75, alpha=0.5) +
stat_slabinterval(data = subset(posterior_epred_draws, time == "pre"),
aes(y = .epred, color=disability, fill=disability),
.width = .95, alpha = 0.5, position = position_dodge(width = -0.05),
scale = 1, side = "left") +
stat_slabinterval(data = subset(posterior_epred_draws, time == "post"),
aes(y = .epred, color=disability, fill=disability),
.width = .95, alpha = 0.5, position = position_dodge(width = -0.05),
scale = 1, side = "right") +
labs(x="Timepoint",
y=bquote("Blood Lactate (mmol\U00B7"~L^-1~")"),
title = "Global grand mean and 95% credible interval (CI)",
subtitle = "Global grand mean and 95% credible interval (CI)\nIndividual data also shown") +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Dark2") +
theme_classic()
data %>%
mutate(time = case_when(
time == 0 ~ "pre",
time == 1 ~ "post"
),
time = factor(time, levels = c("pre", "post"))) %>%
ggplot(aes(x=time, color=disability)) +
geom_line(aes(y=lactate, group=rowid), size=0.75, alpha=0.5, position = position_dodge(width = -0.05)) +
stat_slabinterval(data = subset(posterior_epred_draws, time == "pre"),
aes(y = .epred, color=disability, fill=disability),
.width = .95, alpha = 0.5, position = position_dodge(width = -0.05),
scale = 1, side = "left") +
stat_slabinterval(data = subset(posterior_epred_draws, time == "post"),
aes(y = .epred, color=disability, fill=disability),
.width = .95, alpha = 0.5, position = position_dodge(width = -0.05),
scale = 1, side = "right") +
labs(x="Timepoint",
y=bquote("Blood Lactate (mmol\U00B7"~L^-1~")"),
title = "Global grand mean and 95% credible interval (CI)",
subtitle = "Global grand mean and 95% credible interval (CI)\nIndividual data also shown") +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Dark2") +
theme_classic()
library(patchwork)
individual_data_plot | NA
individual_data_plot |
install.packages("patchwork")
library(patchwork)
(individual_data_plot |  individual_data_plot) + plot_layout(axes = "collect")
library(patchwork)
(individual_data_plot |  individual_data_plot) + plot_layout(axes = "collect")
library(tidyverse)
library(patchwork)
library(brms)
library(tidybayes)
data <- read.csv(file1, fileEncoding = 'UTF-8-BOM') %>%
left_join(
read.csv(file2, fileEncoding = 'UTF-8-BOM'),
by = c("Pre", "Post")
) %>%
janitor::clean_names() %>%
select(disability, class, pre, post) %>%
rowid_to_column()
data <- read.csv("Lactate class.csv", fileEncoding = 'UTF-8-BOM') %>%
left_join(
read.csv("Lactate_sci_other.csv", fileEncoding = 'UTF-8-BOM'),
by = c("Pre", "Post")
) %>%
janitor::clean_names() %>%
select(disability, class, pre, post) %>%
rowid_to_column()
data$disability <- recode(data$disability,
"Non_Sci" = "Other")
data_long <- pivot_longer(data, cols=4:5,
names_to = "time",
values_to = "lactate") %>%
mutate(time = case_when(
time == "pre" ~ 0,
time == "post" ~ 1
))
# run rstan quicker - for bayesian beta regression later on
rstan_options(auto_write = TRUE)
library(rstan)
# run rstan quicker - for bayesian beta regression later on
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores()-1)
disability_lactate_model <- brm(lactate ~ disability * time + (1 | rowid),
data = data,
seed = 1988,
chains = 4,
iter = 8000, warmup = 4000,
cores = 4
)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores()-1)
disability_lactate_model <- brm(lactate ~ disability * time + (1 | rowid),
data = data_long,
seed = 1988,
chains = 4,
iter = 8000, warmup = 4000,
cores = 4
)
posterior_epred_draws <- crossing(rowid = unique(data_long$rowid),
disability = unique(data_long$disability),
time = unique(data_long$time)) %>%
add_epred_draws(model, re_formula = NA) %>%
mutate(time = case_when(
time == 0 ~ "pre",
time == 1 ~ "post"
),
time = factor(time, levels = c("pre", "post")))
posterior_epred_draws <- crossing(rowid = unique(data_long$rowid),
disability = unique(data_long$disability),
time = unique(data_long$time)) %>%
add_epred_draws(fit_disability_lactate_model, re_formula = NA) %>%
mutate(time = case_when(
time == 0 ~ "pre",
time == 1 ~ "post"
),
time = factor(time, levels = c("pre", "post")))
posterior_epred_draws <- crossing(rowid = unique(data_long$rowid),
disability = unique(data_long$disability),
time = unique(data_long$time)) %>%
add_epred_draws(disability_lactate_model, re_formula = NA) %>%
mutate(time = case_when(
time == 0 ~ "pre",
time == 1 ~ "post"
),
time = factor(time, levels = c("pre", "post")))
individual_data_plot <- data_long %>%
mutate(time = case_when(
time == 0 ~ "pre",
time == 1 ~ "post"
),
time = factor(time, levels = c("pre", "post"))) %>%
ggplot(aes(x=time, color=disability)) +
geom_line(aes(y=lactate, group=rowid), size=0.75, alpha=0.5, position = position_dodge(width = -0.05)) +
stat_slabinterval(data = subset(posterior_epred_draws, time == "pre"),
aes(y = .epred, color=disability, fill=disability),
.width = .95, alpha = 0.5, position = position_dodge(width = -0.05),
scale = 1, side = "left") +
stat_slabinterval(data = subset(posterior_epred_draws, time == "post"),
aes(y = .epred, color=disability, fill=disability),
.width = .95, alpha = 0.5, position = position_dodge(width = -0.05),
scale = 1, side = "right") +
labs(x="Timepoint",
y=bquote("Blood Lactate (mmol\U00B7"~L^-1~")"),
title = "Global grand mean and 95% credible interval (CI)",
subtitle = "Global grand mean and 95% credible interval (CI)\nIndividual data also shown",
color = "Disability", fill = "Disability") +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Dark2") +
theme_classic()
individual_data_plot
(individual_data_plot | individual_data_plot) + plot_layout(axes = "collect")
targets::tar_visnetwork()
targets::tar_visnetwork()
targets::tar_visnetwork()
targets::tar_make()
targets::tar_visnetwork()
targets::tar_make()
(individual_data_plot | individual_data_plot) + plot_layout(axes = "collect")
p1 <- (individual_data_plot ) +
plot_layout(guides = "collect") +
plot_annotation(title = title1,
caption = caption1,
tag_level = "A",
tag_prefix = "(", tag_suffix = ")") &
theme(plot.title = element_text(hjust = 0.5, face = "bold"), legend.position = 'bottom')
p1 <- (individual_data_plot ) +
plot_layout(guides = "collect") +
# plot_annotation(title = title1,
#                 caption = caption1,
#                 tag_level = "A",
#                 tag_prefix = "(", tag_suffix = ")") &
theme(plot.title = element_text(hjust = 0.5, face = "bold"), legend.position = 'bottom')
p1
p1 <- (individual_data_plot ) +
plot_layout(guides = "collect") &
# plot_annotation(title = title1,
#                 caption = caption1,
#                 tag_level = "A",
#                 tag_prefix = "(", tag_suffix = ")") &
theme(plot.title = element_text(hjust = 0.5, face = "bold"), legend.position = 'bottom')
p1
p2 <- (individual_data_plot ) +
plot_layout(guides = "collect") &
# plot_annotation(title = title1,
#                 caption = caption1,
#                 tag_level = "A",
#                 tag_prefix = "(", tag_suffix = ")") &
theme(plot.title = element_text(hjust = 0.5, face = "bold"), legend.position = 'bottom')
(wrap_elements(p1) | wrap_elements(p2)) + plot_layout(axes = "collect")
(p1 + p2)  + plot_layout(axes = "collect")
(p1 + p2)  + plot_layout(axes = "collect") &
theme(plot.title = element_text(hjust = 0.5, face = "bold"), legend.position = 'bottom')
targets::tar_load(tidy_disability_lactate_model)
View(tidy_disability_lactate_model)
targets::tar_load(disability_lactate_model)
View(disability_lactate_model)
disability_lactate_model
equatiomatic::extract_eq(disability_lactate_model)
lme4::lmer(lactate ~ disability * time + (1 | rowid),
data = data_long)
eq <- lme4::lmer(lactate ~ disability * time + (1 | rowid),
data = data_long)
equatiomatic::extract_eq(eq)
View(tidy_disability_lactate_model)
targets::tar_load(tidy_disability_rsa_model)
targets::tar_load(tidy_classif_rsa_model)
targets::tar_load(tidy_disability_lactate_model)
targets::tar_load(tidy_classif_lactate_model)
tidy_model_lactate <- rbind(tidy_disability_lactate_model,
tidy_classif_lactate_model) %>%
select(term, estimate, conf.low, conf.high)  %>%
mutate_if(is.numeric, round, 2)
View(tidy_model_lactate)
tidy_model_lactate
View(data_long)
targets::tar_load(tidy_disability_rsa_model)
targets::tar_load(tidy_classif_rsa_model)
tidy_model_rsa <- rbind(tidy_disability_rsa_model,
tidy_classif_rsa_model) %>%
select(term, estimate, conf.low, conf.high)  %>%
mutate_if(is.numeric, round, 2)
tidy_model_rsa
tidy_model_rsa
View(tidy_model_rsa)
tidy_model_rsa$term <- recode(tidy_model_rsa$term,
"(Intercept)" = "Intercept",
"disabilitySCI" = "$Disability_{SCI}$",
"sprint_number" = "Sprint Number",
"distance5M10m" = "$Distance_{5-10m}$",
"distance10M15m" = "$Distance_{10-15m}$",
"distance15M20m" = "$Distance_{15-20m}$",
"disabilitySCI:sprint_number" = "$Disability_{SCI}$:Sprint Number",
"disabilitySCI:distance5M10m" = "$Disability_{SCI}$:$Distance_{5-10m}$",
"disabilitySCI:distance10M15m" = "$Disability_{SCI}$:$Distance_{10-15m}$",
"disabilitySCI:distance15M20m" = "$Disability_{SCI}$:$Distance_{15-20m}$",
"sprint_number:distance5M10m" = "Sprint Number:$Distance_{5-10m}$",
"sprint_number:distance10M15m" = "Sprint Number:$Distance_{10-15m}$",
"sprint_number:distance15M20m" = "Sprint Number:$Distance_{15-20m}$",
"disabilitySCI:sprint_number:distance5M10m" = "$Disability_{SCI}$:Sprint Number:$Distance_{5-10m}$",
"disabilitySCI:sprint_number:distance10M15m" = "$Disability_{SCI}$:Sprint Number:$Distance_{10-15m}$",
"disabilitySCI:sprint_number:distance15M20m" = "$Disability_{SCI}$:Sprint Number:$Distance_{15-20m}$",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__sprint_number" = "$\\sigma_{Sprint Number}$",
"sd__distance5M10m" = "$\\sigma_{distance5M10m}$",
"sd__distance10M15m" = "$\\sigma_{distance10M15m}$",
"sd__distance15M20m" = "$\\sigma_{distance15M20m}$",
"cor__(Intercept).sprint_number" = "$\\rho_{Intercept:Sprint Number}$",
"cor__(Intercept).distance5M10m" = "$\\rho_{Intercept:Distance_{5-10m}}$",
"cor__(Intercept).distance10M15m" = "$\\rho_{Intercept:Distance_{10-15m}}$",
"cor__(Intercept).distance15M20m" = "$\\rho_{Intercept:Distance_{15-20m}}$",
"cor__sprint_number.distance10M15m" = "$\\rho_{Sprint Number:Distance_{10-15m}}$",
"cor__sprint_number.distance15M20m" = "$\\rho_{Sprint Number:Distance_{15-20m}}$",
"cor__sprint_number.distance15M20m" = "$\\rho_{Sprint Number:Distance_{15-20m}}$",
"cor__distance5M10m.distance10M15m" = "$\\rho_{Distance_{5-10m}:Distance_{10-15m}}$",
"cor__distance5M10m.distance15M20m" = "$\\rho_{Distance_{5-10m}:Distance_{15-20m}}$",
"cor__distance10M15m.distance15M20m" = "$\\rho_{Distance_{10-15m}:Distance_{15-20m}}$",
"sd__Observation" = "$\\sigma_{Residual}$",
"classif5" = "$Classification_{5}$",
"classif5:sprint_number" = "$Classification_{5}$:Sprint Number",
"classif5:distance5M10m" = "$Classification_{5}$:$Distance_{5-10m}$",
"classif5:distance10M15m" = "$Classification_{5}$:$Distance_{10-15m}$",
"classif5:distance15M20m" = "$Classification_{5}$:$Distance_{15-20m}$",
"classif5:sprint_number:distance5M10m" = "$Classification_{5}$:Sprint Number:$Distance_{5-10m}$",
"classif5:sprint_number:distance10M15m" = "$Classification_{5}$:Sprint Number:$Distance_{10-15m}$",
"classif5:sprint_number:distance15M20m" = "$Classification_{5}$:Sprint Number:$Distance_{15-20m}$",
)
tidy_model_rsa$term <- recode(tidy_model_rsa$term,
"(Intercept)" = "Intercept",
"disabilitySCI" = "$Disability_{SCI}$",
"sprint_number" = "Sprint Number",
"distance5M10m" = "$Distance_{5-10m}$",
"distance10M15m" = "$Distance_{10-15m}$",
"distance15M20m" = "$Distance_{15-20m}$",
"disabilitySCI:sprint_number" = "$Disability_{SCI}$:Sprint Number",
"disabilitySCI:distance5M10m" = "$Disability_{SCI}$:$Distance_{5-10m}$",
"disabilitySCI:distance10M15m" = "$Disability_{SCI}$:$Distance_{10-15m}$",
"disabilitySCI:distance15M20m" = "$Disability_{SCI}$:$Distance_{15-20m}$",
"sprint_number:distance5M10m" = "Sprint Number:$Distance_{5-10m}$",
"sprint_number:distance10M15m" = "Sprint Number:$Distance_{10-15m}$",
"sprint_number:distance15M20m" = "Sprint Number:$Distance_{15-20m}$",
"disabilitySCI:sprint_number:distance5M10m" = "$Disability_{SCI}$:Sprint Number:$Distance_{5-10m}$",
"disabilitySCI:sprint_number:distance10M15m" = "$Disability_{SCI}$:Sprint Number:$Distance_{10-15m}$",
"disabilitySCI:sprint_number:distance15M20m" = "$Disability_{SCI}$:Sprint Number:$Distance_{15-20m}$",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__sprint_number" = "$\\sigma_{Sprint Number}$",
"sd__distance5M10m" = "$\\sigma_{distance5M10m}$",
"sd__distance10M15m" = "$\\sigma_{distance10M15m}$",
"sd__distance15M20m" = "$\\sigma_{distance15M20m}$",
"cor__(Intercept).sprint_number" = "$\\rho_{Intercept:Sprint Number}$",
"cor__(Intercept).distance5M10m" = "$\\rho_{Intercept:Distance_{5-10m}}$",
"cor__(Intercept).distance10M15m" = "$\\rho_{Intercept:Distance_{10-15m}}$",
"cor__(Intercept).distance15M20m" = "$\\rho_{Intercept:Distance_{15-20m}}$",
"cor__sprint_number.distance10M15m" = "$\\rho_{Sprint Number:Distance_{10-15m}}$",
"cor__sprint_number.distance5M10m" = "$\\rho_{Sprint Number:Distance_{5-10m}}$",
"cor__sprint_number.distance15M20m" = "$\\rho_{Sprint Number:Distance_{15-20m}}$",
"cor__distance5M10m.distance10M15m" = "$\\rho_{Distance_{5-10m}:Distance_{10-15m}}$",
"cor__distance5M10m.distance15M20m" = "$\\rho_{Distance_{5-10m}:Distance_{15-20m}}$",
"cor__distance10M15m.distance15M20m" = "$\\rho_{Distance_{10-15m}:Distance_{15-20m}}$",
"sd__Observation" = "$\\sigma_{Residual}$",
"classif5" = "$Classification_{5}$",
"classif5:sprint_number" = "$Classification_{5}$:Sprint Number",
"classif5:distance5M10m" = "$Classification_{5}$:$Distance_{5-10m}$",
"classif5:distance10M15m" = "$Classification_{5}$:$Distance_{10-15m}$",
"classif5:distance15M20m" = "$Classification_{5}$:$Distance_{15-20m}$",
"classif5:sprint_number:distance5M10m" = "$Classification_{5}$:Sprint Number:$Distance_{5-10m}$",
"classif5:sprint_number:distance10M15m" = "$Classification_{5}$:Sprint Number:$Distance_{10-15m}$",
"classif5:sprint_number:distance15M20m" = "$Classification_{5}$:Sprint Number:$Distance_{15-20m}$",
)
View(tidy_model_rsa)
tidy_model_rsa <- tidy_model_rsa[c(1:21,22,23,25,28,24,26,29,27,30:55,57,60,56,58,61,59,62:64),]
tidy_model_lactate
tidy_model_lactate$term <- recode(tidy_model_lactate$term,
"(Intercept)" = "Intercept",
"disabilitySCI" = "$Disability_{SCI}$",
"time" = "Time",
"disabilitySCI:time" = "$Disability_{SCI}$:Time",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__Observation" = "$\\sigma_{Residual}$",
"class5" = "$Classification_{5}$",
"class5:time" = "$classication_{5}$:Time"
)
tidy_model_lactate
View(tidy_model_lactate)
targets::tar_visnetwork()
targets::tar_make()
targets::tar_load(rhat_plot_disability_lactate_model)
rhat_plot_disability_lactate_model
targets::tar_load(trace_plot_disability_lactate_model)
targets::tar_load(trace_plot_disability_lactate_model)
trace_plot_disability_lactate_model
targets::tar_load(pp_check_disability_lactate_model)
pp_check_disability_lactate_model
targets::tar_load(rhat_plot_classif_lactate_model)
rhat_plot_classif_lactate_model
targets::tar_load(trace_plot_classif_lactate_model)
trace_plot_classif_lactate_model
targets::tar_load(pp_check_classif_lactate_model)
pp_check_classif_lactate_model
targets::tar_visnetwork()
warnings()
targets::tar_make()
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_disability_lactate_model)
targets::tar_load(tidy_classif_lactate_model)
tidy_model_lactate <- rbind(tidy_disability_lactate_model,
tidy_classif_lactate_model) %>%
select(term, estimate, conf.low, conf.high)  %>%
mutate_if(is.numeric, round, 2)
tidy_model_lactate$term <- recode(tidy_model_lactate$term,
"(Intercept)" = "Intercept",
"disabilitySCI" = "$Disability_{SCI}$",
"time" = "Time",
"disabilitySCI:time" = "$Disability_{SCI}$:Time",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__Observation" = "$\\sigma_{Residual}$",
"class5" = "$Classification_{5}$",
"class5:time" = "$classication_{5}$:Time"
)
View(tidy_model_lactate)
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
